.PHONY: all
.PHONY: toolchain
.PHONY: sdk
.PHONY: docker-sdk
.PHONY: policy-tool
.PHONY: fesvr
.PHONY: tinycrypt
.PHONY: dover-spike
.PHONY: free-rtos
.PHONY: opcodes
.PHONY: emptyfs
.PHONY: test-sdk
.PHONY: check-sdk
.PHONY: documentation
.PHONY: clean
.PHONY: cleanall

SHELL:=/bin/bash
BUILD_DISTRO_DOCKER:=./build-distro-docker $(SDK_DISTRO)
RUN_DISTRO_DOCKER:=./run-distro-docker $(SDK_DISTRO)

SDK_VERSION:=0.0.0

# Ensure appropriate ENV variables are set
ifndef DOVER
  $(error variable DOVER not defined)
endif

all:
	$(MAKE) toolchain
	$(MAKE) policy-tool tinycrypt dover-spike
	$(MAKE) dover-os
	$(MAKE) emptyfs
	$(MAKE) free-rtos

toolchain:
	$(MAKE) -C ../riscv-gnu-toolchain

sdk:
ifndef SDK_DISTRO
	$(error variable SDK_DISTRO not defined)
endif
	$(BUILD_DISTRO_DOCKER)
	$(RUN_DISTRO_DOCKER) make all documentation
	$(RUN_DISTRO_DOCKER) \
		./build-sdk -o $(DOVER) -s $(SDK_VERSION) -d $(SDK_DISTRO)

# DOCKER_BUILD_ARGS is to allow passing additional parameters to build such as
# proxy settings without polluting the Makefile for those who do not need it.
# For most this does not need to be set

docker-sdk:
ifndef SDK_DISTRO
	$(error variable SDK_DISTRO not defined)
endif
ifndef SKIP_PACKAGE_BUILD
	$(MAKE) sdk
endif
	docker build $(DOCKER_BUILD_ARGS) -t isp-sdk-$(SDK_DISTRO):latest \
		--build-arg SDK_VERSION=$(SDK_VERSION) \
		--build-arg SDK_DISTRO=$(SDK_DISTRO) \
		-f distro-sdk/$(SDK_DISTRO)/Dockerfile.sdk .

policy-tool:
	$(MAKE) -C ../dover-policies

fesvr: $(DOVER)/include/fesvr

$(DOVER)/include/fesvr:
	$(MAKE) -C ../riscv-fesvr

tinycrypt:
	$(MAKE) -C ../tinycrypt

dover-spike: $(DOVER)/include/fesvr
	$(MAKE) -C ../riscv-isa-sim

free-rtos:
	$(MAKE) -C ../FreeRTOS-RISCV

dover-os:
	$(MAKE) -C ../dover-os

# Do not 'make opcodes' unless you have actually modified
# source files under riscv-opcodes.
# 'make opcodes' causes .h files to be sprinkled amongst various
# other repos, and then those repos have to be committed and pushed.
# When you check out, e.g. riscv-isa-sim, it comes with the .h files
# generated by 'make opcodes'.
opcodes:
	touch ../riscv-opcodes/opcodes-custom
	$(MAKE) -C ../riscv-opcodes install

emptyfs:
	../dover-os/build/utils/fs_create $(DOVER)/empty.fs

test-sdk check-sdk:
ifndef SDK_DISTRO
	$(error variable SDK_DISTRO not defined)
endif
	find sdk-tests -name "*~" -delete
	docker run --rm -i -v $(PWD)/sdk-tests:/sdk-tests \
		-t isp-sdk-$(SDK_DISTRO):latest bats --tap sdk-tests/

documentation:
	$(MAKE) -C documentation

clean:
	$(MAKE) -C ../dover-policies clean
	$(MAKE) -C ../riscv-fesvr clean
	$(MAKE) -C ../tinycrypt clean
	$(MAKE) -C ../riscv-isa-sim clean
	$(MAKE) -C ../FreeRTOS-RISCV clean
	rm -rf packages

cleanall: clean
	$(MAKE) -C ../riscv-gnu-toolchain clean
	$(MAKE) -C documentation clean
	rm -rf $(DOVER)/*
